import { Entity } from '@loopback/repository';
import { ContactInformation } from './contact-information.model';
import { CustomerContactInfo } from './customer-contact-info.model';
import { CustomerPlanOptionsValues } from './customer-plan-options-values.model';
import { CustomerPlans } from './customer-plans.model';
import { CustomerRelatives } from './customer-relatives.model';
import { CustomerSignup } from './customer-signup.model';
import { InsurancePlans } from './insurance-plans.model';
export declare class Customer extends Entity {
    brokerId?: number;
    ccExpiry?: string;
    ccExpiryAlertSent?: boolean;
    companyId?: number;
    companyName?: string;
    billAsCorporate?: number;
    deleted?: boolean;
    dob?: string;
    equitableCertificateId?: string;
    equitableRegistrationStatus?: string;
    firstName: string;
    fusebillCustomerId?: string;
    fusebillPaymentId?: string;
    gender?: string;
    greenshieldMemberId?: string;
    greenshieldRegistrationStatus?: string;
    groupId?: number;
    id?: number;
    isCorporateAccount?: boolean;
    lastName: string;
    maritalStatus?: string;
    middleName?: string;
    monthlyRecurringRevenue?: number;
    parentId?: number;
    paymentMethod?: string;
    paymentMethodId?: string;
    paymentMethodName?: string;
    planLevel?: number;
    registrationDate?: string;
    signature?: string;
    status?: string;
    uniqueSinId?: string;
    userId?: number;
    spendingLimit?: number;
    annualIncome?: number;
    dateOfHiring?: string;
    assignerTier?: number;
    actualTier?: number;
    employeeId?: string;
    user_id: number;
    broker_id: number;
    childCustomers: Customer[];
    parent_id: number;
    customerRelatives: CustomerRelatives[];
    customerSignup: CustomerSignup;
    contactInformations: ContactInformation[];
    customerContactInfos: CustomerContactInfo[];
    subscriptionPlans: InsurancePlans[];
    customerPlans: CustomerPlans[];
    customerPlanOptionsValues: CustomerPlanOptionsValues[];
    [prop: string]: any;
    constructor(data?: Partial<Customer>);
}
export interface CustomerRelations {
}
export declare type CustomerWithRelations = Customer & CustomerRelations;
